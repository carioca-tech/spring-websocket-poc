buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.moowork.gradle:gradle-node-plugin:0.10"
    }
}
/* Bower/Node setup for gradle based on:
 * https://objectpartners.com/2015/04/29/using-gradle-and-bower-to-manage-jscss-dependencies/
 */


group 'com.ltavares'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'war'
apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'
apply plugin: 'com.moowork.node'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven {
        url = "http://lightadmin.org/nexus/content/repositories/releases"
    }
}

node {
    version = '0.12.2'
    npmVersion = '2.7.5'
    download = true
}

task npmCacheConfig(type: NpmTask) {
    description = "Configure the NPM cache"
    def npmCacheDir = "${gradle.getGradleUserHomeDir()}/caches/npm"
    outputs.files file(npmCacheDir)
    args = [ 'config', 'set', 'cache', npmCacheDir ]
}

/**
 * Downloads bower and grunt
 */
task npmPackages(type: NpmTask, dependsOn: npmCacheConfig) {
    description = "Install Node.js packages"
    args = [ 'install' ]
    inputs.files file('package.json')
    outputs.files file('node_modules')
}

/**
 * Installs bower
 */
task bowerInstall(type: NodeTask) {
    script = file('node_modules/bower/bin/bower')
    args = ["--config.storage.cache=${gradle.getGradleUserHomeDir()}/caches/bower/cache",
            "--config.storage.packages=${gradle.getGradleUserHomeDir()}/caches/bower/packages",
            "--config.storage.registry=${gradle.getGradleUserHomeDir()}/caches/bower/registry",
            'install']
    inputs.files file('bower.json')
    outputs.files file('bower_components')
    dependsOn npmPackages
}

task bowerSyncJavascript(type: Sync) {
    from 'bower_components'
    into "build/assets/javascripts/bower_components"
    exclude '**/*.min.js'
    exclude '**/angular*/index.js'
    exclude '**/angular*/ng*.js'
    include 'jquery/dist/jquery.js'
    include 'angular*/**/*.js'
    dependsOn bowerInstall
}

task bowerSyncStylesheets(type: Sync) {
    from 'bower_components'
    into "build/assets/stylesheets/bower_components"
    include 'angular*/**/*.css'
    include 'animate.css/animate.css'
    dependsOn bowerInstall
}

task bowerPackages() {
    dependsOn bowerSyncJavascript, bowerSyncStylesheets
}

processResources.dependsOn bowerPackages

clean.delete << file('node_modules')
clean.delete << file('bower_components')


dependencies {
    compile 'org.springframework.security:spring-security-web:4.0.2.RELEASE'
    compile 'org.springframework.security:spring-security-config:4.0.2.RELEASE'

    compile 'org.springframework:spring-webmvc:4.1.6.RELEASE'
    compile 'org.springframework:spring-websocket:4.1.6.RELEASE'
    compile 'org.springframework:spring-messaging:4.1.6.RELEASE'
    compile 'org.springframework:spring-context:4.1.6.RELEASE'

    compile 'com.fasterxml.jackson.core:jackson-core:2.6.2'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.6.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.2'

    compile 'org.thymeleaf:thymeleaf-spring4:2.1.4.RELEASE'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.3'
    compile 'org.apache.logging.log4j:log4j-api:2.3'
    compile 'org.apache.logging.log4j:log4j-core:2.3'
}

gretty {
    servletContainer = 'jetty9'
    logbackConfigFile = 'src/main/tomcat/logback.xml'
}
